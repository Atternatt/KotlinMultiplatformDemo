plugins {
    id("com.android.library")
    id 'org.jetbrains.kotlin.multiplatform'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

group 'com.m2f.IMDB.core'
version '0.0.1'

// configuration of the Android preset
android {
    defaultConfig {
        compileSdkVersion 29
    }
    packagingOptions {
        exclude "META-INF/*"
    }

    sourceSets {
        main {
            manifest.srcFile 'src/androidMain/AndroidManifest.xml'
            java.srcDirs = ['src/androidMain/kotlin']
            resources.srcDirs = ['src/androidMain/kotlin']
        }
        test {
            java.srcDirs = ['src/androidTest/kotlin']
        }
    }
}

kotlin {
    final def iosTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos") ? presets.iosArm64 : presets.iosX64
    targetFromPreset(iosTarget, "ios") {
        binaries {
            framework("SDK")
        }
    }

    android()

    sourceSets {
        all {
            languageSettings {
                useExperimentalAnnotation('kotlin.Experimental')
                useExperimentalAnnotation('kotlin.time.ExperimentalTime')
                useExperimentalAnnotation('kotlinx.coroutines.FlowPreview')
                useExperimentalAnnotation('kotlinx.coroutines.ExperimentalCoroutinesApi')
            }
        }

        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')

                //Harmony -> a Framework to implement Clean architecture easily
                //api project(':harmony-kotlin')

                // coroutines
                api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8"
                api "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.3.8"

                // serialization library
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.0-RC"
                //implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:1.0.0-RC"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-cbor:1.0.0-RC"
                //implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:1.0.0-RC"

                // http client library
                implementation "io.ktor:ktor-client-core:1.3.2"
                implementation "io.ktor:ktor-client-json:1.3.2"
                implementation "io.ktor:ktor-client-logging:1.3.2"
                implementation "io.ktor:ktor-client-serialization:1.3.2"

                // date library
                implementation "com.soywiz.korlibs.klock:klock:1.8.0"
            }
        }

        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }

        androidMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.0"

                // coroutines android
                api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8"

                // ktor android
                implementation "io.ktor:ktor-client-android:1.3.2"
                implementation "io.ktor:ktor-client-core-jvm:1.3.2"
                implementation "io.ktor:ktor-client-json-jvm:1.3.2"
                implementation "io.ktor:ktor-client-logging-jvm:1.3.2"
                //implementation "io.ktor:ktor-client-serialization-jvm:1.3.2"

                implementation "androidx.annotation:annotation:1.2.0-alpha01"
            }
        }

        androidTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test-junit:1.4.0"

                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8"

                implementation "io.ktor:ktor-client-mock-jvm:1.3.2"
            }
        }

        iosMain {
        }

        iosTest {
        }
    }
}

configurations {
    compileClasspath
}